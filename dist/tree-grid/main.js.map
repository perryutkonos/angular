{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/in-memory-data.service.ts","webpack:///./src/app/row.ts","webpack:///./src/app/row/row.component.css","webpack:///./src/app/row/row.component.html","webpack:///./src/app/row/row.component.ts","webpack:///./src/app/table/table.component.css","webpack:///./src/app/table/table.component.html","webpack:///./src/app/table/table.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-table></app-table>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {HttpClientModule} from '@angular/common/http';\nimport {HttpClientInMemoryWebApiModule} from 'angular-in-memory-web-api';\n\nimport {AppComponent} from './app.component';\nimport {RowComponent} from './row/row.component';\nimport { TableComponent } from './table/table.component';\n\nimport { InMemoryDataService }  from './in-memory-data.service';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        RowComponent,\n        TableComponent\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        HttpClientInMemoryWebApiModule.forRoot(\n            InMemoryDataService, {dataEncapsulation: false}\n        )\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\n\nimport {Row} from \"./row\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n    constructor(\n        private http: HttpClient,\n    ) { }\n\n    private dataUrl = 'api/rows';\n    \n    getRows(): Observable<Row[]> {\n        return this.http.get<Row[]>(this.dataUrl)\n    }\n}\n","import { InMemoryDbService } from 'angular-in-memory-web-api';\n\nexport class InMemoryDataService implements InMemoryDbService {\n    createDb() {\n        const rows = [{\n            id: 1,\n            name: \"Первый\",\n            comment: \"Комментрий\",\n            subRows:[{\n                id:2,\n                name:\"Первый Первый\",\n                comment: \"Some\",\n                subRows:[{\n                    id:5,\n                    name:\"Еще название\",\n                    comment: \"Some comment\",\n                    subRows:[]\n                },{\n                    id:6,\n                    name:\"Еще еще название\",\n                    comment: \"Some comment\",\n                    subRows:[]\n                }]\n            },{\n                id:3,\n                name:\"Первый Второй\",\n                comment: \"Testt\",\n                subRows:[{\n                    id:100,\n                    name:\"Angular топ\",\n                    comment: \"Some comment\",\n                    subRows:[]\n                }]\n            }]\n        },{\n            id:4,\n            name:\"Второй\",\n            comment: \"таратата\",\n            subRows:[]\n        }];\n        return {rows};\n    }\n}","export class Row {\r\n    id: number;\r\n    name: string;\r\n    comment:string;\r\n    subRows: Row[]\r\n}","module.exports = \"\"","module.exports = \"<table class=\\\"tree-grid__subrows\\\">\\n    <tbody>\\n    <tr class=\\\"tree-grid__row\\\" (click)=\\\"toggleSubRows()\\\">\\n        <td class=\\\"tree-grid__cell\\\">\\n            <span>{{row.id}}</span>\\n        </td>\\n        <td class=\\\"tree-grid__cell\\\">\\n            <span [ngStyle]=\\\"{'margin-left':marginLeft}\\\">{{row.name}} </span>\\n        </td>\\n        <td class=\\\"tree-grid__cell\\\">\\n            <span>{{row.comment}}</span>\\n        </td>\\n    </tr>\\n    <ng-container *ngIf=\\\"showSubRows\\\">\\n        <tr *ngFor=\\\"let subRow of row.subRows\\\">\\n            <td app-row [row]=\\\"subRow\\\" [level]=\\\"level+1\\\" colspan=\\\"3\\\"></td>\\n        </tr>\\n    </ng-container>\\n    </tbody>\\n</table>\\n\\n\"","import {Component, OnInit, Input} from '@angular/core';\nimport {Row} from '../row';\n\n@Component({\n    selector: '[app-row]',\n    templateUrl: './row.component.html',\n    styleUrls: ['./row.component.css']\n})\nexport class RowComponent implements OnInit {\n\n    @Input() row: Row;\n    @Input() level: number;\n\n    public showSubRows = false;\n    public marginLeft = '';\n    \n    constructor() {\n    }\n\n    ngOnInit() {\n        this.marginLeft = `${(this.level*25).toString()}px`;\n    }\n\n    toggleSubRows() {\n        this.showSubRows = !this.showSubRows;\n    }\n\n}\n","module.exports = \"table{\\r\\n    \\r\\n}\"","module.exports = \"<table class=\\\"tree-grid\\\">\\n    <thead class=\\\"tree-grid__head\\\">\\n    <tr>\\n        <td class=\\\"tree-grid__cell\\\">ID</td>\\n        <td class=\\\"tree-grid__cell\\\">Название</td>\\n        <td class=\\\"tree-grid__cell\\\">Комментарий</td>\\n    </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor=\\\"let row of rows\\\">\\n            <td app-row [row]=\\\"row\\\" [level]=\\\"0\\\" colspan=\\\"3\\\"></td>\\n        </tr>\\n    </tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport {Row} from \"../row\";\nimport {DataService} from \"../data.service\";\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class TableComponent implements OnInit {\n\n    rows:Row[];\n\n    constructor(private dataService: DataService) { }\n\n    ngOnInit() {\n        this.getRows();\n    }\n\n    getRows(): void {\n        this.dataService.getRows().subscribe(rows => this.rows = rows);\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}